{"ast":null,"code":"var _jsxFileName = \"/Users/sarahproctor/Desktop/learn/cat-tinder-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Home from './pages/Home';\nimport CatIndex from './pages/CatIndex';\nimport CatShow from './pages/CatShow';\nimport CatNew from './pages/CatNew';\nimport CatEdit from './pages/CatEdit'; // imports routing components\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css'; // import mockCats from './mockCats.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createNewCat = newcat => {\n      // logging the newcat object to endure it has been created\n      console.log(newcat);\n    };\n\n    this.editCat = editcat => {\n      // logging the editcat object to endure it has been updated\n      console.log(editcat);\n    };\n\n    this.state = {\n      cats: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"cats:\", this.state.cats); // fetch returns a promise\n\n    fetch(\"http://localhost:3000/cats\").then(response => {\n      console.log(response); // checking for a successfull response\n\n      if (response.status === 200) {\n        // convert the response to json\n        // returns a promise\n        return response.json();\n      }\n    }).then(catsArray => {\n      // set the state with the data from the backend into the empty array\n      this.setState({\n        cats: catsArray\n      });\n    }).catch(errors => {\n      console.log(errors);\n    });\n  }\n\n  render() {\n    console.log(\"cats:\", this.state.cats);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/catindex\",\n      render: props => /*#__PURE__*/React.createElement(CatIndex, {\n        cats: this.state.cats,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), this.state.cats.map((cat, index) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        key: index,\n        exact: true,\n        path: `/catshow/${cat.id}`,\n        render: props => /*#__PURE__*/React.createElement(CatShow, Object.assign({}, props, {\n          id: cat.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/catnew\",\n      render: props => /*#__PURE__*/React.createElement(CatNew, {\n        createNewCat: this.createNewCat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), this.state.cats.map((cat, index) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        key: index,\n        exact: true,\n        path: `/catedit/${cat.id}`,\n        render: props => /*#__PURE__*/React.createElement(CatEdit, {\n          editCat: this.editCat,\n          id: cat.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sarahproctor/Desktop/learn/cat-tinder-frontend/src/App.js"],"names":["React","Component","Home","CatIndex","CatShow","CatNew","CatEdit","BrowserRouter","Router","Route","Switch","App","constructor","props","createNewCat","newcat","console","log","editCat","editcat","state","cats","componentDidMount","fetch","then","response","status","json","catsArray","setState","catch","errors","render","map","cat","index","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Home from './pages/Home'\nimport CatIndex from './pages/CatIndex'\nimport CatShow from './pages/CatShow'\nimport CatNew from './pages/CatNew'\nimport CatEdit from './pages/CatEdit'\n// imports routing components\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './App.css'\n// import mockCats from './mockCats.js'\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      cats: []\n    }\n  }\n\n  componentDidMount(){\n    console.log(\"cats:\", this.state.cats)\n     // fetch returns a promise\n    fetch(\"http://localhost:3000/cats\")\n    .then((response)=>{\n      console.log(response)\n      // checking for a successfull response\n      if(response.status === 200){\n         // convert the response to json\n         // returns a promise\n        return(response.json())\n      }\n    })\n    .then((catsArray)=>{\n      // set the state with the data from the backend into the empty array\n      this.setState({ cats: catsArray })\n    })\n    .catch(errors => {\n      console.log(errors)\n    })\n  }\n\n\n  createNewCat = (newcat) => {\n    // logging the newcat object to endure it has been created\n    console.log(newcat)\n  }\n\n  editCat = (editcat) => {\n    // logging the editcat object to endure it has been updated\n    console.log(editcat)\n  }\n\n  render(){\n    console.log(\"cats:\", this.state.cats)\n    return(\n      <React.Fragment>\n        <Router>\n          <Switch>\n            {/* Home */}\n            <Route path=\"/\" exact component={ Home } />\n            {/* Index */}\n            <Route\n              exact path=\"/catindex\"\n              render={ (props) => <CatIndex cats={ this.state.cats } /> }\n            />\n            {/* Show */}\n            {\n              this.state.cats.map((cat, index) => {\n                return(\n                  <Route\n                    key={ index }\n                    exact path={`/catshow/${cat.id}`}\n                    render={ (props) => <CatShow {...props} id={ cat.id } /> }\n                  />\n                )\n              })\n            }\n            {/* New */}\n            <Route\n              exact path=\"/catnew\"\n              render={ (props) => <CatNew createNewCat={ this.createNewCat } /> }\n            />\n            {/* Edit */}\n            {\n              this.state.cats.map((cat, index) => {\n                return(\n                  <Route\n                    key={ index }\n                    exact path={`/catedit/${cat.id}`}\n                    render={ (props) => <CatEdit editCat={ this.editCat } id={ cat.id } /> }\n                  />\n                )\n              })\n            }\n\n          </Switch>\n        </Router>\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}